{"version":3,"sources":["Rain.js","API.js","HourCard.js","Clear.js","MainCard.js","DayCard.js","App.js","serviceWorker.js","index.js"],"names":["Rain","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","draw","bind","assertThisInitialized","console","log","canvas","document","getElementById","width","window","innerWidth","height","innerHeight","getContext","ctx","w","h","strokeStyle","rainColor","lineWidth","lineCap","init","maxParts","rainAmount","a","push","x","Math","random","y","l","xs","ys","particles","b","setState","context","setInterval","state","clearRect","c","length","p","beginPath","moveTo","lineTo","stroke","move","makeItRain","react_default","createElement","class","style","background","id","React","Component","API","HourCard","weather","time","temperature","MainCard","handleChange","handleSubmit","_this2","getCityWeather","city","then","data","cityName","Promise","resolve","reject","fetch","response","json","event","value","target","temp","toFixed","_this3","preventDefault","weatherType","weatherInfo","name","main","kelvinToCelcius","toUpperCase","src_Rain_0","DayCard","day","maxTemperature","minTemperature","App","groupBy","key","array","reduce","objectsByKeyValue","obj","concat","getCityWeatherDays","days","dates","list","groupByDay","map","item","dateName","Date","dt_txt","getDay","dateIndex","min","temp_min","max","temp_max","lines","daysElements","src_DayCard_0","className","src_MainCard_0","src_HourCard_0","Boolean","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.26c214be.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Rain.css';\r\n\r\nclass Rain extends React.Component {\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.draw = this.draw.bind(this);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log();\r\n    }\r\n    \r\n    makeItRain() {\r\n        var canvas = document.getElementById('bg-canvas');\r\n        canvas.width = window.innerWidth;\r\n        canvas.height = window.innerHeight;\r\n        \r\n        if(canvas.getContext) {\r\n            var ctx = canvas.getContext('2d');\r\n            var w = canvas.width;\r\n            var h = canvas.height;\r\n            ctx.strokeStyle = this.props.rainColor ? this.props.rainColor : 'rgba(174,194,224,0.5)';\r\n            ctx.lineWidth = this.props.lineWidth || 0.3;\r\n            ctx.lineCap = 'round';\r\n            \r\n            var init = [];\r\n            var maxParts = this.props.rainAmount || 500;\r\n            for(var a = 0; a < maxParts; a++) {\r\n                init.push({\r\n                    x: Math.random() * w,\r\n                    y: Math.random() * h,\r\n                    l: Math.random() * 1,\r\n                    xs: -4 + Math.random() * 4 + 2,\r\n                    ys: Math.random() * 10 + 10\r\n                })\r\n            }\r\n            \r\n            var particles = [];\r\n            for(var b = 0; b < maxParts; b++) {\r\n                particles[b] = init[b];\r\n            }\r\n            \r\n            this.setState({\r\n                context: ctx,\r\n                canvas: canvas,\r\n                particles: particles\r\n            })\r\n            setInterval(this.draw, 20);\r\n        }\r\n    };\r\n      \r\n    draw() {\r\n        this.setState({\r\n            canvas: {\r\n                width: window.innerWidth,\r\n                height: window.innerHeight\r\n            }\r\n        })\r\n        \r\n        var w = this.state.canvas.width;\r\n        var h = this.state.canvas.height;\r\n        \r\n        this.state.context.clearRect(0, 0, w, h);\r\n        for(var c = 0; c < this.state.particles.length; c++) {\r\n            var p = this.state.particles[c];\r\n            this.state.context.beginPath();\r\n            this.state.context.moveTo(p.x, p.y);\r\n            this.state.context.lineTo(p.x + p.l * p.xs, p.y + p.l * p.ys);\r\n            this.state.context.stroke();\r\n        }\r\n        this.move();\r\n    };\r\n    \r\n    move() {\r\n        if(!this.state.particles) {\r\n            return;\r\n        }\r\n\r\n        var w = this.state.canvas.width;\r\n        var h = this.state.canvas.height;\r\n        \r\n        for(var b = 0; b < this.state.particles.length; b++) {\r\n            var p = this.state.particles[b];\r\n            // p.x += p.xs;\r\n            p.y += p.ys;\r\n            if(p.x > w || p.y > h) {\r\n                // p.x = Math.random() * w;\r\n                p.y = -30;\r\n            }\r\n        }\r\n    };\r\n    \r\n    componentDidMount() {\r\n        this.makeItRain();\r\n    };\r\n    \r\n    render() {\r\n        return (\r\n            <div class=\"rain\" style={{background:this.props.background}}>\r\n                <canvas id=\"bg-canvas\"></canvas>\r\n            </div>\r\n            )\r\n    };\r\n        \r\n};\r\n    \r\nexport default Rain;\r\n    ","export default {\n    baseUrl: \"https://api.openweathermap.org/data/2.5/\",\n    appid: \"a7091a7d01f3bf589dd68d40223e222e\",\n    // constructor(props){\n    //     super(props);\n    //     this.state = {\n    //         appid: \"a7091a7d01f3bf589dd68d40223e222e\",\n    //         baseUrl: \"https://api.openweathermap.org/data/2.5/\"\n    //     }\n    // },\n\n    // getCityWeather(cityName) {\n    //     return new Promise((resolve, reject) => {\n    //         fetch(this.state.baseUrl+\"weather?q=\"+cityName)\n    //         .then(response => response.json())\n    //         .then(data => resolve(data));\n    //     });\n    // }\n\n}\n\n","import React from 'react';\r\nimport \"./HourCard.css\";\r\nimport API from \"./API\";\r\nimport Rain from \"./Rain\";\r\nimport Clear from \"./Clear\";\r\n\r\nclass HourCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n        let weather = \"\";\r\n        switch(this.props.weather) {\r\n            case \"cloud\": \r\n                weather = <i class=\"fas fa-cloud\"></i>;\r\n                break;\r\n            case \"sun\":\r\n                weather = <i class=\"fas fa-sun\"></i>\r\n                break;\r\n            case \"rain\":\r\n                weather = <i class=\"fas fa-cloud-rain\"></i>\r\n                break;\r\n            case \"sun/cloud\":\r\n                weather = <i class=\"fas fa-cloud-sun\"></i>\r\n                break;\r\n            default:\r\n                weather = <i class=\"fas fa-cloud\"></i>; \r\n        }\r\n\r\n\r\n        return (\r\n            <div class=\"hour-card\">\r\n                <span class=\"hour-card__time\">{this.props.time}</span>\r\n                <div class=\"hour-card__weather-container\">\r\n                    <span class=\"hour-card__probability\">30%</span>\r\n                    {weather}\r\n                </div>\r\n                <span class=\"hour-card__temperature\">{this.props.temperature}</span>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default HourCard;","import React from 'react';\nimport './Clear.css';\n\n\nclass Clear extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div style={{background: this.props.background}}class=\"weather-clear\"></div>\n        )\n    }\n}\n\nexport default Clear;","import React from 'react';\r\nimport \"./MainCard.css\";\r\nimport API from \"./API\";\r\nimport Rain from \"./Rain\";\r\nimport Clear from \"./Clear\";\r\nimport HourCard from \"./HourCard\";\r\n\r\nclass MainCard extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getCityWeather(this.props.city).then((data) => {\r\n            this.setState({data});\r\n        })\r\n    }\r\n\r\n    getCityWeather(cityName) {\r\n        return new Promise((resolve, reject) => {\r\n            fetch(API.baseUrl+'weather?q='+cityName+'&appid='+API.appid)\r\n            .then(response => response.json())\r\n            .then(data => resolve(data), () => { reject() });\r\n        })\r\n    }\r\n\r\n\r\n\r\n    handleChange(event) {\r\n        this.setState({ value: event.target.value });\r\n    }\r\n\r\n    kelvinToCelcius(temp) {\r\n        return (temp - 273.15).toFixed(0);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        this.getCityWeather(this.props.city).then((data) => {\r\n            console.log(data);\r\n            this.setState({data});\r\n        }, () => { console.log('City not found') });\r\n\r\n        event.preventDefault();\r\n    }\r\n    \r\n    render () {\r\n\r\n        let weatherType = null;\r\n        var weatherInfo = null;\r\n\r\n        \r\n        if(this.state.data) {\r\n            weatherInfo = \r\n            <div class=\"main-card\">\r\n                <h2 class=\"main-card__city\">{this.state.data.name}</h2>\r\n                <span class=\"main-card__status\">{this.state.data.weather[0].main}</span>\r\n                <span class=\"main-card__temperature\">{this.kelvinToCelcius(this.state.data.main.temp)}°</span>\r\n            </div>\r\n        \r\n            switch (this.state.data.weather[0].main.toUpperCase()) {\r\n                case \"RAIN\":\r\n                    weatherType = <Rain lineWidth={0.8} rainAmount={100}></Rain>;\r\n                    break;\r\n                case \"CLEAR\":\r\n                    weatherType = <Rain lineWidth={1} rainAmount={200}></Rain>;\r\n                    break;\r\n                default:\r\n                    weatherType = <Rain lineWidth={1} rainAmount={200}></Rain>;\r\n                    break;\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div class=\"main-card\">\r\n                {weatherType}                \r\n                <div class=\"main-card__content\">\r\n                    {/* <form class=\"main-card__city-form\" onSubmit={this.handleSubmit}>\r\n                        <label>\r\n                        <input class=\"main-card__city-query\" type=\"text\" placeholder=\"City name\" value={this.state.value} onChange={this.handleChange} />\r\n                        </label>\r\n                        <input class=\"main-card__search\" type=\"submit\" value=\"Search\" />\r\n                    </form> */}\r\n                    {weatherInfo}\r\n                </div>\r\n                <div class=\"main-card__today-info\">\r\n                    <div>\r\n                        <span>Thursday</span>\r\n                        <span>TODAY</span>\r\n                    </div>\r\n                    <div>\r\n                        <span>10</span>\r\n                        <span>2</span>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MainCard;","import React from 'react';\r\nimport \"./DayCard.css\";\r\nimport API from \"./API\";\r\nimport Rain from \"./Rain\";\r\nimport Clear from \"./Clear\";\r\n\r\nclass DayCard extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n\r\n    render() {\r\n\r\n        let weather = \"\";\r\n        switch(this.props.weather) {\r\n            case \"cloud\": \r\n                weather = <i class=\"fas fa-cloud\"></i>;\r\n                break;\r\n            case \"sun\":\r\n                weather = <i class=\"fas fa-sun\"></i>\r\n                break;\r\n            case \"rain\":\r\n                weather = <i class=\"fas fa-cloud-rain\"></i>\r\n                break;\r\n            case \"sun/cloud\":\r\n                weather = <i class=\"fas fa-cloud-sun\"></i>\r\n                break;\r\n            default:\r\n                weather = <i class=\"fas fa-cloud\"></i>; \r\n        }\r\n\r\n        return (\r\n            <div class=\"day-card\">\r\n                <span class=\"day-card__day\">{this.props.day}</span>\r\n                {weather}\r\n                <div>\r\n                    <span class=\"day-card__max-temp\">{this.props.maxTemperature}</span>\r\n                    <span class=\"day-card__min-temp\">{this.props.minTemperature}</span>    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default DayCard;","import React from 'react';\nimport './App.css';\nimport Rain from \"./Rain\";\nimport API from \"./API\";\nimport MainCard from \"./MainCard\";\nimport HourCard from \"./HourCard\";\nimport DayCard from \"./DayCard\";\n\nclass App extends React.Component {\n  \n  constructor(props) {\n    super(props);\n    this.state = {\n      city: \"Porto Alegre\"\n    };\n  }\n  \n  groupBy = key => array =>\n  array.reduce((objectsByKeyValue, obj) => {\n    const value = obj[key];\n    objectsByKeyValue[value] = (objectsByKeyValue[value] || []).concat(obj);\n    return objectsByKeyValue;\n  }, {});\n  \n  \n  componentDidMount() {\n    console.log(\"fetching data\");\n    this.getCityWeatherDays(40, this.state.city).then((data) => {\n      var days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      let dates = data.list;\n      var groupByDay = this.groupBy('dateIndex');\n      dates = dates.map((item) => {\n        let date = {\n          dateName: days[new Date(item.dt_txt).getDay()],\n          dateIndex: new Date(item.dt_txt).getDay(),\n          weather: item.weather[0].main,\n          min: item.main.temp_min,\n          max: item.main.temp_max\n        }\n        return date;\n      });\n      \n      \n      dates = groupByDay(dates);\n      console.log(dates);\n      \n      this.setState({dates});\n    })\n  }\n  \n  getCityWeatherDays(lines, cityName) {\n    return new Promise((resolve, reject) => {\n      console.log(API.appid);\n      fetch(API.baseUrl+\"forecast?q=\"+cityName+\"&units=metric&cnt=\"+lines+\"&appid=\"+API.appid)\n      .then(response => response.json())\n      .then(data => resolve(data), () => { reject() });\n    })\n  }\n  \n  render() {\n    \n    if(this.state.dates) {\n      var daysElements = [];\n      \n      for(var day in this.state.dates) {\n        daysElements.push(\n          <DayCard day={this.state.dates[day][0].dateName} maxTemperature={this.state.dates[day][0].max.toFixed(0)} minTemperature={this.state.dates[day][0].min.toFixed(0)} weather={this.state.dates[day][0].weather}></DayCard>\n          )\n        }\n        \n      }\n      \n      return (\n        <div style={{background: \"rgba(0,0,0,0.3)\"}} className=\"App\">\n        <div class=\"weather-app\">\n        <MainCard city={this.state.city}></MainCard>\n        <div class=\"main-card__hourly\">\n        <HourCard time=\"Now\" temperature=\"16°\" weather=\"rain\"></HourCard>\n        <HourCard time=\"2pm\" temperature=\"16°\" weather=\"sun/cloud\"></HourCard>\n        <HourCard time=\"3pm\" temperature=\"16°\" weather=\"rain\"></HourCard>\n        <HourCard time=\"4pm\" temperature=\"16°\" weather=\"sun/cloud\"></HourCard>\n        <HourCard time=\"5pm\" temperature=\"13°\" weather=\"cloud\"></HourCard>\n        <HourCard time=\"6pm\" temperature=\"14°\" weather=\"cloud\"></HourCard>\n        <HourCard time=\"7pm\" temperature=\"16°\" weather=\"sun\"></HourCard>\n        <HourCard time=\"8pm\" temperature=\"16°\" weather=\"rain\"></HourCard>\n        <HourCard time=\"9pm\" temperature=\"16°\" weather=\"sun/cloud\"></HourCard>\n        <HourCard time=\"10pm\" temperature=\"13°\" weather=\"cloud\"></HourCard>\n        <HourCard time=\"11pm\" temperature=\"14°\" weather=\"cloud\"></HourCard>\n        <HourCard time=\"12pm\" temperature=\"16°\" weather=\"sun\"></HourCard>\n        </div>\n        <div class=\"main-card__daily\">\n        {daysElements}\n        </div>\n        </div>\n        </div>\n        );\n      }\n    }\n    \n    export default App;\n    ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}